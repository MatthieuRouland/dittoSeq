% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DittoScatterPlot.R
\name{dittoScatterPlot}
\alias{dittoScatterPlot}
\title{Show RNAseq data overlayed on a scatter plot}
\usage{
dittoScatterPlot(
  object,
  x.var,
  y.var,
  color.var = NULL,
  shape.by = NULL,
  split.by = NULL,
  extra.vars = NULL,
  cells.use = NULL,
  show.others = FALSE,
  size = 1,
  opacity = 1,
  color.panel = dittoColors(),
  colors = seq_along(color.panel),
  assay.x = .default_assay(object),
  slot.x = .default_slot(object),
  adjustment.x = NULL,
  assay.y = .default_assay(object),
  slot.y = .default_slot(object),
  adjustment.y = NULL,
  assay.color = .default_assay(object),
  slot.color = .default_slot(object),
  adjustment.color = NULL,
  assay.extra = .default_assay(object),
  slot.extra = .default_slot(object),
  adjustment.extra = NULL,
  do.hover = FALSE,
  hover.data = NULL,
  hover.assay = .default_assay(object),
  hover.slot = .default_slot(object),
  hover.adjustment = NULL,
  shape.panel = c(16, 15, 17, 23, 25, 8),
  rename.color.groups = NULL,
  rename.shape.groups = NULL,
  min.color = "#F0E442",
  max.color = "#0072B2",
  min = NULL,
  max = NULL,
  xlab = x.var,
  ylab = y.var,
  main = "make",
  sub = NULL,
  theme = theme_bw(),
  legend.show = TRUE,
  legend.color.title = color.var,
  legend.color.size = 5,
  legend.color.breaks = waiver(),
  legend.color.breaks.labels = waiver(),
  legend.shape.title = shape.by,
  legend.shape.size = 5,
  data.out = FALSE
)
}
\arguments{
\item{object}{A Seurat or SingleCellExperiment object}

\item{x.var, y.var}{Single string giving a gene or metadata that will be used for the x- and y-axes of the scatterplot.
Note: must be continuous.

Alternatively, can be a directly supplied numeric vector of length equal to the total number of cells/samples in \code{object}.}

\item{color.var}{Single string giving a gene or metadata that will set the color of cells/samples in the plot.

Alternatively, can be a directly supplied numeric or string, vector or a factor of length equal to the total number of cells/samples in \code{object}.}

\item{shape.by}{Single string giving a metadata (Note: must be discrete.) that will set the shape of cells/samples in the plot.

Alternatively, can be a directly supplied string vector or a factor of length equal to the total number of cells/samples in \code{object}.}

\item{split.by}{Single string giving a metadata (Note: must be discrete.) that will set the groups used to split the cells/samples into multiple plots with \code{ggplot + facet_wrap}.

Alternatively, can be a directly supplied string vector or a factor of length equal to the total number of cells/samples in \code{object}.}

\item{extra.vars}{String vector providing any extra metadata to be stashed in the dataframe supplied to \code{ggplot(data)}.

Useful for making custom alterations \emph{after} dittoSeq plot generation.}

\item{cells.use}{String vector of cells'/samples' names which should be included.

Alternatively, a Logical vector, the same length as the number of cells in the object, which sets which cells to include.
For the typically easier logical method, provide \code{USE} in \code{object@cell.names[USE]} OR \code{colnames(object)[USE]}).}

\item{show.others}{Logical. TRUE by default, whether other cells should be shown in the background in light gray.}

\item{size}{Number which sets the size of data points. Default = 1.}

\item{opacity}{Number between 0 and 1.
Great for when you have MANY overlapping points, this sets how solid the points should be:
1 = not see-through at all. 0 = invisible. Default = 1.
(In terms of typical ggplot variables, = alpha)}

\item{color.panel}{String vector which sets the colors to draw from. \code{dittoColors()} by default, see \code{\link{dittoColors}} for contents.}

\item{colors}{Integer vector, the indexes / order, of colors from color.panel to actually use}

\item{assay.x, assay.y, assay.color, assay.extra, slot.x, slot.y, slot.color, slot.extra, adjustment.x, adjustment.y, adjustment.color, adjustment.extra}{assay, slot, and adjustment set which data to use when the axes or coloring are based on expression data. See \code{\link{gene}} for additional information.}

\item{do.hover}{Logical which controls whether the object will be converted to a plotly object so that data about individual points will be displayed when you hover your cursor over them.
\code{hover.data} argument is used to determine what data to use.}

\item{hover.data}{String vector of gene and metadata names, example: \code{c("meta1","gene1","meta2","gene2")} which determines what data to show on hover when \code{do.hover} is set to \code{TRUE}.}

\item{hover.assay, hover.slot, hover.adjustment}{Similar to the x, y, and color versions, when showing expression data upon hover, these set what data will be shown.}

\item{shape.panel}{Vector of integers corresponding to ggplot shapes which sets what shapes to use.
When discrete groupings are supplied by \code{shape.by}, this sets the panel of shapes.
When nothing is supplied to \code{shape.by}, only the first value is used.
Default is a set of 6, \code{c(16,15,17,23,25,8)}, the first being a simple, solid, circle.

Note: Unfortunately, shapes can be hard to see when points are on top of each other & they are more slowly processed by the brain.
For these reasons, even as a color blind person myself writing this code, I recommend use of colors for variables with many discrete values.}

\item{rename.color.groups}{String vector containing new names for the identities of the color overlay groups.}

\item{rename.shape.groups}{String vector containing new names for the identities of the shape overlay groups.}

\item{min.color}{color for lowest values of var/min.  Default = yellow}

\item{max.color}{color for highest values of var/max.  Default = blue}

\item{min}{Number which sets the value associated with the minimum color.}

\item{max}{Number which sets the value associated with the maximum color.}

\item{xlab, ylab}{Strings which set the labels for the axes. To remove, set to \code{NULL}.}

\item{main}{String, sets the plot title.
A default title is automatically generated if based on \code{color.var} and \code{shape.by} when either are provided.
To remove, set to \code{NULL}.}

\item{sub}{String, sets the plot subtitle.}

\item{theme}{A ggplot theme which will be applied before dittoSeq adjustments. Default = \code{theme_bw()}. See \code{https://ggplot2.tidyverse.org/reference/ggtheme.html} for other options.}

\item{legend.show}{Logical. Whether any legend should be displayed. Default = \code{TRUE}.}

\item{legend.color.title, legend.shape.title}{Strings which sets the title for the color or shape legends. Default = \code{NULL} OR \code{color.var} when a shape legend will also be shown.}

\item{legend.color.size, legend.shape.size}{Numbers representing the size to increase the plotting of color or shape legend icons to (for discrete variable plotting).
Default = 5. *Enlarging the icons in the colors legend is incredibly helpful for making colors more distinguishable by color blind individuals.}

\item{legend.color.breaks}{Numeric vector which sets the discrete values to show in the color-scale legend for continuous data.}

\item{legend.color.breaks.labels}{String vector, with same length as \code{legend.breaks}, which renames what's displayed next to the tick marks of the color-scale.}

\item{data.out}{Whether just the plot should be output, or a list with the plot and Target_data and Others_data dataframes.  Note: plotly output is turned off in this setting, but hover.data is still calculated.}
}
\value{
Makes a scatterplot from (sc)RNAseq data where colored dots and/or shapes represent individual cells/samples.  X and Y can be gene expression (or any numeric metadata) of those cells/samples.
}
\description{
Show RNAseq data overlayed on a scatter plot
}
\details{
This function creates a dataframe with the X and Y coordinates determined by \code{x.var} and \code{y.var}.
It then adds data for how coloring should be set if a \code{color.var} is given & for how shapes should be set if a \code{shape.by} is given.
The \code{assay}, \code{slot}, and \code{adjustment} inputs (\code{.x}, \code{.y}, and \code{.color}) can be used to change what expression data is used when the target data is gene expression data.

Next, if a set of cells or samples to use is indicated with the \code{cells.use} input, then the dataframe is split into \code{Target_data} and \code{Others_data} based on subsetting by the target cells/samples.

Finally, a scatter plot is then created using these dataframes.
Non-target cells will be displayed in gray if \code{show.others=TRUE},
and target cell data is displayed on top, colored and shaped based on the \code{color.var}- and \code{shape.by}-associated data.

If \code{data.out=TRUE}, a list containing three slots is output: the plot (named 'p'), a data.table containing the underlying data for target cells (named 'Target_data'), and a data.table containing the underlying data for non-target cells (named 'Others_data').

If \code{do.hover} is set to \code{TRUE}, the plot is coverted from ggplot to plotly & cell/sample information, determined by the \code{hover.data} input, is retrieved, added to the dataframe, and displayed
upon hovering the cursor over the plot.

Many characteristics of the plot can be adjusted using discrete inputs:
\itemize{
\item \code{size} and \code{opacity} can be used to adjust the size and transparency of the data points.
\item Color can be adjusted with \code{color.panel} and/or \code{colors} for discrete data, or \code{min}, \code{max}, \code{min.color}, and \code{max.color} for continuous data.
\item Shapes can be adjusted with \code{shape.panel}.
\item Color and shape labels can be changed using \code{rename.color.groups} and \code{rename.shape.groups}.
\item Titles and axes labels can be adjusted with \code{main}, \code{sub}, \code{xlab}, \code{ylab}, and \code{legend.title} arguments.
\item Legends can also be adjusted in other ways, using variables that all start with "\code{legend.}" for easy tab-completion lookup.
}
}
\examples{
# dittoSeq handles bulk and single-cell data quit similarly.
# The SingleCellExperiment object structure is used for both,
# but all functions can be used similarly directly on Seurat
# objects as well.

example(importDittoBulk, echo = FALSE)
myRNA

# Mock up some nCount_RNA and nFeature_RNA metadata
#  == the default way to extract
myRNA$nCount_RNA <- runif(60,200,1000)
myRNA$nFeature_RNA <- myRNA$nCount_RNA*runif(60,0.95,1.05)
# and also percent.mito metadata
myRNA$percent.mito <- sample(c(runif(50,0,0.05),runif(10,0.05,0.2)))

dittoScatterPlot(
    myRNA, x.var = "nCount_RNA", y.var = "nFeature_RNA")

# Shapes or colors can be overlaid representing discrete metadata
#   or (only colors) continuous metadata / expression data by providing
#   metadata or gene names to 'color.var' and 'shape.by'
dittoScatterPlot(
    myRNA, x.var = "nCount_RNA", y.var = "nFeature_RNA",
    color.var = "percent.mito")
dittoScatterPlot(
    myRNA, x.var = "nCount_RNA", y.var = "nFeature_RNA",
    color.var = "groups",
    shape.by = "SNP")
dittoScatterPlot(
    myRNA, x.var = "nCount_RNA", y.var = "nFeature_RNA",
    color.var = "gene1")

# Data can be "split" or faceted by a discrete variable as well.
dittoDimPlot(myRNA, "gene1",
    shape.by = "clustering",
    split.by = "timepoint")
# OR with 'extra.vars' plus manually faceting for added control
dittoDimPlot(myRNA, "gene1",
    extra.vars = c("clustering","timepoint")) +
    facet_grid(rows = vars(clustering), cols = vars(timepoint))

# Note: scatterplots like this can be very useful for dataset QC, especially
#   with percentage of reads coming from genes as the color overlay.
}
\seealso{
\code{\link{getGenes}} and \code{\link{getMetas}} to see what the \code{x.var}, \code{y.var}, \code{color.var}, \code{shape.by}, and \code{hover.data} options are.

\code{\link{dittoDimPlot}} for making very similar data representations, but where dimensionality reduction (PCA, t-SNE, UMAP, etc.) dimensions are the scatterplot axes.
}
\author{
Daniel Bunis
}
