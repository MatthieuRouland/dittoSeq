% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/importBulkRNAseq.R
\name{importDESeq2}
\alias{importDESeq2}
\title{Creates an RNAseq object from a DESeq2 processed bulk RNAseq data object.}
\usage{
importDESeq2(dds, normalized.data = NULL, blind, counts = NULL,
  reductions = NULL)
}
\arguments{
\item{dds}{The output of running DESeq() on your data. = The DESeq2 object for your data. REQUIRED.}

\item{normalized.data}{(optional) a matrix containing normalized data for genes (rows) and samples (columns) in the dds.
column names must be the sample names, and row names must be gene names.
When provided, this matrix is used directly and not re-calculated.}

\item{blind}{Logical which sets whether rlog estimation should be blinded to sample info. Run \code{\link[DESeq2]{rlog}} for more info about whether it should.}

\item{counts}{(optional) a matrix containing raw counts data.
When provided, this matrix is used for the RNAseq \code{counts} slot. Otherwise, counts matrix embedded within the \code{dds} is used.}

\item{reductions}{(optional) for advanced users, a named list containing individual dimensionality reductions perviously run.}
}
\value{
Outputs an \code{\linkS4class{RNAseq}} object.
}
\description{
The first step of visualization of DESeq-analyzed bulk RNAseq data with dittoSeq is running this function to transform the data into the \linkS4class{RNAseq} structure that dittoSeq functions expect.
}
\details{
This function takes in a \code{dds} DESeqDataSet (the output of running \code{DESeq()})
and generates an \code{\linkS4class{RNAseq}} object with
raw \code{counts}, normalized \code{data}, \code{samples} names, and \code{meta.data} slots automatically pulled and filled in from the \code{dds}.
This effectively converts the data into the structure expected by all dittoSeq visualization and helper functions.

For the \code{data} slot, the user must either provide a pre-calculated normalized data matrix or determine whether automatic DESeq2 regularized log calculation should be blinded.
For the pre-calculated data option, user should supply this directly as a matrix to the \code{normalized.data} input.
For the automatic calculation of regularized log normalization option, supply either \code{TRUE} or \code{FALSE} to the \code{blind} input which will be passed through to the DESeq2 \code{\link[DESeq2]{rlog}} function.
For more information on that, see \code{\link[DESeq2]{rlog}}.

Metadata are pulled from the supplied \code{dds}. Then "Sample" names and "Nreads" metadata are generated automatically if not already included.
}
\note{
dittoSeq is built to be a companion package for aiding analysis of RNAseq datasets of diverse structures.
It works quite well for this purpose, but is not meant to be used as the main tool for data-processing and normalization.
Inclusion of automatic normalization of bulk RNAseq data in import functions is provided for ease-of-use, but it is the responsibility of the user to provide properly normalized data
(to the `normalized.data` inputs of import functions) when the default settings for rlog (DESeq2) or cpm (edgeR/Limma-Voom) calculation are improper.
}
\examples{

# Generate mock RNAseq counts and a DESeq object from the mock data
# count tables from RNA-Seq data
counts.table <- matrix(rnbinom(n=1000, mu=100, size=1/0.5), ncol=10)
colnames(counts.table) <- paste0("Sample",1:10)
rownames(counts.table) <- paste0("Gene",1:100)
conditions <- factor(rep(1:2, each=5))

# object construction
library(DESeq2)
dds <- DESeqDataSetFromMatrix(
    counts.table, DataFrame(conditions), ~ conditions)
dds <- DESeq(dds)

# Import
myRNA <- importDESeq2(dds, blind = FALSE)
}
\seealso{
\code{\link[DESeq2]{DESeq}} and \code{\link[DESeq2]{rlog}} for information about DESeq and regularized log calculation.

\code{\link{addMetaRNAseq}} for how to add additional metadata to an \code{RNAseq} object

\code{\link{addPrcomp}} and \code{\link{addDimReduction}} for how to add dimensionality reductions to an \code{\linkS4class{RNAseq}} object for use in
\code{\link{dittoDimPlot}} visualizations.
}
\author{
Daniel Bunis
}
