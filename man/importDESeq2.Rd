% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BulkRNAseq.R
\name{importDESeq2}
\alias{importDESeq2}
\title{Creates an RNAseq object from a DESeq object.}
\usage{
importDESeq2(dds, blind, counts = NULL, reductions = NULL)
}
\arguments{
\item{dds}{The output of running DESeq() on your data. = The DESeq2 object for your data. REQUIRED.}

\item{blind}{Logical which sets whether rlog estimation should be blinded to sample info. Run \code{\link[DESeq2]{rlog}} for more info about whether it should.}

\item{counts}{Matrix. The raw counts data matrix.  Not required but HIGHLY RECOMMENDED.}

\item{reductions}{For advanced users, a named list containing individual dimensionality reductions perviously run.}
}
\value{
Outputs an \code{\linkS4class{RNAseq}} object.
}
\description{
The first step of visualization of DESeq-analyzed bulk RNAseq data is running this function. Doing will extract meta.data information from the DESeq object, data using the rlog function, and if run_PCA=TRUE, will populate all other slots as well.
}
\details{
This function takes in a \code{dds} DESeqDataSet (the output of running \code{DESeq()})
and generates an \code{\linkS4class{RNAseq}} object with
\code{counts}, \code{data}, \code{samples}, and \code{meta.data} automatically pulled and filled in from the \code{dds}.

For the \code{data} slot, the user must first determine whether regularized log calculation should be blinded, and this decision must be supplied to the \code{blind} input.
For more information on that, see \code{\link[DESeq2]{rlog}}.
}
\examples{

# Generate mock RNAseq counts and a DESeq object from the mock data
# count tables from RNA-Seq data
counts.table <- matrix(rnbinom(n=1000, mu=100, size=1/0.5), ncol=10)
colnames(counts.table) <- paste0("Sample",1:10)
rownames(counts.table) <- paste0("Gene",1:100)
conditions <- factor(rep(1:2, each=5))

# object construction
library(DESeq2)
dds <- DESeqDataSetFromMatrix(
    counts.table, DataFrame(conditions), ~ conditions)
dds <- DESeq(dds)

# Import
myRNA <- importDESeq2(dds, blind = FALSE)

# Add a dimensionality reduction to myRNA
#   NOTE: This is typically not done with all genes in a dataset.
#   The inclusion of this example code is not an endorsement of a particular
#   method of PCA. Consult yourself, a bioinformatician, or literature for
#   tips on proper techniques.
PCA <- prcomp(t(myRNA@data), center = TRUE, scale = TRUE)
myRNA <- addDimReduction(
    embeddings = PCA$x,
    object = myRNA,
    name = "pca",
    key = "PC",
    raw.object = PCA)

### Add a batch metadata
# Option 1, all in the funciton:
myRNA <- addMetaRNAseq(
    value = rep(1:2, each = 5),
    name = "batch",
    object = myRNA)
# Option 2, create variable beforehand, and just provide that to value.
#     The name of the variable will be used to name the metadata slot.
batch <- rep(1:2, each = 5)
myRNA <- addMetaRNAseq(batch, object = myRNA)

# Visualize batch on a PCA plot
#   Note: For RNAseq objects, reduction.use defaults to "pca"
#   so just dittoDimPlot("Sample", myRNA, size = 3) would work the same!
dittoDimPlot("batch", myRNA, reduction.use = "pca", size = 3)

}
\seealso{
\code{\link[DESeq2]{DESeq}} and \code{\link[DESeq2]{rlog}} for information about DESeq and regularized log calculation.

\code{\link{addMetaRNAseq}} for how to add additional metadata to an \code{RNAseq} object

\code{\link{addPrcomp}} and \code{\link{addDimReduction}} for how to add dimensionality reductions to an \code{\linkS4class{RNAseq}} object for use in
\code{\link{dittoDimPlot}} visualizations.
}
\author{
Daniel Bunis
}
