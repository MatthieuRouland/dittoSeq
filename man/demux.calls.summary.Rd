% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Demuxlet_Tools.R
\name{demux.calls.summary}
\alias{demux.calls.summary}
\title{Plots the number of annotations per sample, per lane}
\usage{
demux.calls.summary(object = DEFAULT, singlets.only = TRUE,
  main = "Sample Annotations by Lane", sub = NULL,
  ylab = "Annotations", xlab = "Sample", color = dittoColors()[2],
  theme = NULL, rotate.labels = TRUE, data.out = FALSE)
}
\arguments{
\item{object}{the Seurat Object = name of object in "quotes". REQUIRED, unless `DEFAULT <- "object"` has been run.}

\item{singlets.only}{Whether to only show data for cells called as singlets by demuxlet. Default is TRUE. Note: if doublets are included, only one of their sample calls will be used.}

\item{main}{plot title. Default = "Sample Annotations by Lane"}

\item{sub}{plot subtitle}

\item{ylab}{y axis label, default is "Annotations"}

\item{xlab}{x axis label, default is "Sample"}

\item{color}{bars color. Default is the dittoColors skyBlue.}

\item{theme}{A complete ggplot theme. Default is a slightly modified theme_bw().}

\item{rotate.labels}{whether sample names / x-axis labels should be rotated or not. Default is TRUE.}

\item{data.out}{Logical, whether underlying data for the plot should be output instead of the plot itself.}
}
\value{
For a given Seurat object, summarizes how many cells in each lane were anotated to each sample.  Assumes that the Sample calls of each cells, and which lane each cell belonged to, are stored in 'Sample' and 'Lane' metadata slots, respectively, as would be the case if the Seurat object was created with the Import10XDemux function.
}
\description{
Plots the number of annotations per sample, per lane
}
\examples{
pbmc <- Seurat::pbmc_small

# Generate some mock lane, sample, and doublet.call metadata
pbmc@meta.data$Lane <- sample(
    c("Lane1", "Lane2", "Lane3", "Lane4"),
    ncol(pbmc),
    replace = TRUE)
pbmc@meta.data$Sample <- sample(
    c("Sample-1", "Sample-2", "Sample-3", "Sample-4", "Sample-5"),
    ncol(pbmc),
    replace = TRUE)
pbmc@meta.data$demux.doublet.call <- "SNG"

demux.calls.summary(pbmc)

demux.calls.summary(pbmc, data.out = TRUE)
}
