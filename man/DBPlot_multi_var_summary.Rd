% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DBPlot.R
\name{DBPlot_multi_var_summary}
\alias{DBPlot_multi_var_summary}
\title{Generates a DBPlot where datapoints are gene(s)/metadata instead of cells/samples.}
\usage{
DBPlot_multi_var_summary(vars, object = DEFAULT, group.by = "Sample",
  color.by = NULL, cells.use = NULL, plots = c("vlnplot", "jitter"),
  data.type = "relative", data.summary = "mean", do.hover = FALSE,
  color.panel = MYcolors, colors = c(1:length(color.panel)),
  theme = theme_classic(), legend.show = FALSE, legend.title = FALSE,
  main = NULL, sub = NULL, ylab = NULL, y.breaks = NULL,
  min = NULL, max = NULL, xlab = NULL, labels = NULL,
  rotate.labels = TRUE, reorder.x = 1:length(meta.levels(group.by,
  object)), jitter.size = 1, jitter.width = 0.2,
  jitter.color = "black", jitter.shape = 16, boxplot.width = 0.2,
  boxplot.color = "black", boxplot.show.outliers = NA,
  boxplot.fill = T, hline = NULL, hline.linetype = "dashed",
  hline.color = "black")
}
\arguments{
\item{vars}{c("gene1","gene2","gene3",...). REQUIRED. A list of genes from which to generate the plot}

\item{object}{the Seurat or RNAseq object to draw from = REQUIRED, unless `DEFAULT <- "object"` has been run.}

\item{group.by}{"metadata" to use for separating values. REQUIRED.}

\item{color.by}{"metadata" to use for coloring. Affects boxplot and vlnplot fills. REQUIRED when using either.}

\item{cells.use}{Cells to include in generating the summary data: either in the form of a character list of names, or a logical that is the same length as the number of cells in the object (a.k.a. USE in object@cell.names[USE])}

\item{plots}{types of plots to include: possibilities = "jitter", "boxplot", "vlnplot". NOTE: The order matters, so use c("back","middle","front") when inputing multiple to put them in the order you want.}

\item{data.type}{In what format should the data for each var be summarized? DEFAULT = "relative".  Most other options are not as great for comparing accross genes that may have vastly different expression patterns. All options: "normalized" (data slot), "raw" (raw.data or counts slot), "scaled" (the scale.data slot of Seurat objects), "relative" (= pulls normalized data, then uses the scale() function to produce a relative-to-mean representation), or "normalized.to.max" (= pulls normalized data, then divides by the maximum value)?}

\item{data.summary}{"mean" or "median". = the summary statistic to use for summarizing expression/score accross the gorups. Default is to use the mean.}

\item{do.hover}{TRUE/FALSE. Default = F.  If set to true: object will be converted to a ggplotly object so that data about individual points will be displayed when you hover your cursor over them.  Data shown will be the gene name. ('data.hover' argument is NOT used with this function.)}

\item{color.panel}{the set of colors to draw from}

\item{colors}{indexes / or order, of colors from color.panel to actual use}

\item{theme}{Allows setting of a theme. Default = theme_classic when nothing is provided.}

\item{legend.show}{TRUE/FALSE, whether the legend should be included/removed. Default = FALSE}

\item{legend.title}{TRUE/FALSE/"custom-title", whether to have title for the plot's legend OR the custom title you would like the legend to have. Default = FALSE}

\item{main}{plot title (Default is none)}

\item{sub}{plot subtitle (Default is none)}

\item{ylab}{y axis label (Default is none)}

\item{y.breaks}{a list of breaks that should be used as major gridlines. c(break1,break2,break3,etc.)}

\item{min}{Use to set a custom minimum y-value to show.  Default = set based on the limits of the data in var.}

\item{max}{Use to set a custom maximum y-value to show.  Default = set based on the limits of the data in var.}

\item{xlab}{x axis label, default is blank (NULL)}

\item{labels}{c("label1","label2","label3"). = Names of the samples/groups if you wish to change them.  Default is the values in the group.by data. NOTE: you need to give at least as many labels as there are discrete values in the group.by data.}

\item{rotate.labels}{TRUE/FALSE. whether the labels should be rotated.  Default = FALSE = vertical labels.}

\item{reorder.x}{Sequence of numbers from 1:length(meta.levels(group.by)) for providing a new order for the samples.  Default = alphabetical then numerical. Method: look at an un-reordered plot, then plug in which position from left-to-right that you want the left-most group to move to, then where the originally second-from-left should go, and so on.}

\item{jitter.size}{the size of the jitter shapes.}

\item{jitter.width}{the width/spread of the jitter in the x direction}

\item{jitter.color}{the color of the jitter shapes}

\item{jitter.shape}{number corresponding to a ggplot shape.  Default = 16 = a small dot.}

\item{boxplot.width}{the width/spread of the boxplot in the x direction}

\item{boxplot.color}{the color of the lines of the boxplot}

\item{boxplot.show.outliers}{whether outliers should by including in the boxplot. Default is FALSE when there is a jitter plotted, TRUE if no jitter.}

\item{boxplot.fill}{whether the boxplot should be filled in or not.}

\item{hline}{y value(s) where a dashed horizontal line should go}

\item{hline.linetype}{Type of line.  Any ggplot linetype should work.  Defaults to "dashed"}

\item{hline.color}{color(s) of the horizontal line(s)}
}
\value{
This function will output a DBPlot where each data point represents the average (or median) of expression of an individual gene, or of an individual metadata score, across a group of samples.
}
\description{
Generates a DBPlot where datapoints are gene(s)/metadata instead of cells/samples.
}
\examples{
library(Seurat)
pbmc <- Seurat::pbmc_small
genes <- get.genes("pbmc")[1:30]
DBPlot_multi_var_summary(genes, object = "pbmc",
                         group.by = "RNA_snn_res.1", color.by = "RNA_snn_res.1")
# Note: if DEFAULT <- "pbmc" is run beforehand, the object
      # input can be skipped completely.
DEFAULT <- "pbmc"
DBPlot_multi_var_summary(genes,
                         group.by = "RNA_snn_res.1", color.by = "RNA_snn_res.1")

# To change it to have the violin plot in the back, a jitter on
#  top of that, and a white boxplot with no fill in front:
DBPlot_multi_var_summary(genes, object = "pbmc",
                         group.by = "RNA_snn_res.1", color.by = "RNA_snn_res.1",
                         plots = c("vlnplot","jitter","boxplot"),
                         boxplot.color = "white", boxplot.fill = FALSE)
}
