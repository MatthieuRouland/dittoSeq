% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dittoPlot.R
\name{dittoPlot}
\alias{dittoPlot}
\alias{dittoRidgePlot}
\alias{dittoBoxPlot}
\title{Plots continuous data for cutomizable cells'/samples' groupings on a y-axis}
\usage{
dittoPlot(var, object = DEFAULT, group.by, color.by = group.by,
  shape = 16, cells.use = NULL, plots = c("jitter", "vlnplot"),
  data.type = "normalized", do.hover = FALSE, data.hover = var,
  color.panel = MYcolors, colors = c(1:length(color.panel)),
  theme = theme_classic(), main = "make", sub = NULL,
  ylab = "make", y.breaks = NULL, min = NULL, max = NULL,
  xlab = group.by, x.labels = NULL, rotate.labels = NA,
  x.reorder = seq_along(meta.levels(group.by, object)),
  jitter.size = 1, jitter.width = 0.2, jitter.color = "black",
  jitter.shapes = c(16, 15, 17, 23, 25, 8),
  jitter.shape.legend.size = NA, jitter.shape.legend.show = TRUE,
  boxplot.width = 0.2, boxplot.color = "black",
  boxplot.show.outliers = NA, boxplot.fill = TRUE,
  vlnplot.lineweight = 1, vlnplot.width = 1,
  ridgeplot.lineweight = 1, ridgeplot.scale = 1.25, add.line = NULL,
  line.linetype = "dashed", line.color = "black", legend.show = TRUE,
  legend.title = NULL, data.out = FALSE)

dittoRidgePlot(..., plots = c("ridgeplot", "jitter"))

dittoBoxPlot(..., plots = c("jitter", "boxplot"))
}
\arguments{
\item{var}{Single String representing a metadata or gene OR a numeric vector with length equal to the total number of cells/samples in the dataset.
This is the data that will be displayed.}

\item{object}{A Seurat, SingleCellExperiment, or \linkS4class{RNAseq} object, or the name of the object in "quotes". REQUIRED, unless `DEFAULT <- "object"` has been run.}

\item{group.by}{String representing the name of a "metadata" to use for separating the cells/samples into discrete groups. REQUIRED.}

\item{color.by}{String representing the name of a "metadata" to use for settin color.
Affects boxplot, vlnplot, and ridgeplot fills.  Default's to \code{group.by} so this input can be skipped if both are the same.}

\item{shape}{Integer representing a ggplot shape, OR String representing the name of a "metadata" to use for setting the shape of the jitter points.  Default = 16, dots.}

\item{cells.use}{String vector of cells'/samples' names which should be included OR or a logical vector that is the same length as the number of cells in the object which sets which cells to include (a.k.a. \code{USE} in \code{colnames(object)[USE]}).}

\item{plots}{String vectore which sets the types of plots to include: possibilities = "jitter", "boxplot", "vlnplot", "ridgeplot". See details section for more info.}

\item{data.type}{String, for when plotting expression data: Should the data be "normalized" (data slot), "raw" (raw.data or counts slot), "scaled" (the scale.data slot of Seurat objects), "relative" (= pulls normalized data, then uses the scale() function to produce a relative-to-mean representation), or "normalized.to.max" (= pulls normalized data, then divides by the maximum value)? DEFAULT = "normalized"}

\item{do.hover}{Logical. Default = \code{FALSE}.  If set to \code{TRUE} (and if there is a jitter plotted - the data it will work with) : object will be converted to a ggplotly object so that data about individual points will be displayed when you hover your cursor over them.  'data.hover' argument is used to determine what data to use.}

\item{data.hover}{String vector, a list of variable names, c("meta1","gene1","meta2","gene2") which determines what data to show upon hover when do.hover is set to \code{TRUE}.}

\item{color.panel}{String vector which the set of colors to draw from.  MYcolors by default.}

\item{colors}{Integer vector, the indexes / order, of colors from color.panel to actually use}

\item{theme}{ggplot theme. Allows setting of a theme. Default = theme_classic when nothing is provided.}

\item{main}{String, sets the plot title. Default = "make" and if left as make, a title will be automatically generated.  To remove, set to \code{NULL}.}

\item{sub}{String, sets the plot subtitle}

\item{ylab}{String, sets the continuous-axis label (=y-axis for box and violin plots, x-axis for ridgeplots).
Defaults to "\code{var}" or "\code{var} expression" if var is a gene.}

\item{y.breaks}{Numeric vector a set of breaks that should be used as major gridlines. c(break1,break2,break3,etc.) NOTE: The low and highs of this variable will override `min` and `max`.}

\item{min, max}{Scalars which set a custom minimum / maximum y-value to show.  Default = set based on the limits of the data in var.}

\item{xlab}{String, sets the grouping-axis label (=x-axis for box and violin plots, y-axis for ridgeplots).
Default is \code{group.by} so it defaults to the name of the grouping information.
Set to \code{NULL} to remove.}

\item{x.labels}{String vector, c("label1","label2","label3",...) which overrides the names of the samples/groups.  NOTE: you need to give at least as many labels as there are discrete values in the group.by data.}

\item{rotate.labels}{Logical. whether the labels should be rotated.  Default = \code{FALSE} = vertical labels.}

\item{x.reorder}{Integer vector. A sequence of numbers, from 1 to the number of groupings, for rearranging their order.
Method: Make a first plot without this input. First \code{x.reorder} value then sets where the originally leftmost goruping will be.
Second \code{x.reorder} value sets where the grouping that was originally second-from-the-left will go.
Values: 1 = move to left-most, 2 = move to second from the left, and so on.}

\item{jitter.size}{Scalare which sets the size of the jitter shapes.}

\item{jitter.width}{Scalar that sets the width/spread of the jitter in the x direction. Ignored in ridgeplots.}

\item{jitter.color}{String which sets the color of the jitter shapes}

\item{jitter.shapes}{Integer vector representing which shapes to use. Default is the first in the list, 16, which corresponds to dots.
When jitter shape is determined by a variable, more of this input is used.}

\item{jitter.shape.legend.size}{Scalar which changes the size of the shape key in the legend.
If set to \code{NA}, \code{jitter.size} is used.}

\item{jitter.shape.legend.show}{Logical which sets whether the shapes lagend will be shown is \code{shape} when jitter shape is determined by a variable.}

\item{boxplot.width}{Scalar which sets the width/spread of the boxplot in the x direction}

\item{boxplot.color}{String which sets the color of the lines of the boxplot}

\item{boxplot.show.outliers}{Logical, whether outliers should by including in the boxplot.
Default is \code{FALSE} when there is a jitter plotted, \code{TRUE} if there is no jitter.}

\item{boxplot.fill}{Logical, whether the boxplot should be filled in or not.}

\item{vlnplot.lineweight}{Scalar which sets the thickness of the line that outlines the violin plots.}

\item{vlnplot.width}{Scalar which sets the width/spread of the jitter in the x direction}

\item{ridgeplot.lineweight}{Scalar which sets the thickness of the ridgeplot outline.}

\item{ridgeplot.scale}{Scalar which sets the distance/overlap between ridgeplots. A value of 1 means the tallest density curve just touches the baseline of the next higher one.  Higher numbers lead to greater overlap.  Default = 1.25}

\item{add.line}{numeric value(s) where a dashed horizontal line should go}

\item{line.linetype}{String which sets the type of line.  Any ggplot linetype should work.  Defaults to "dashed"}

\item{line.color}{String that sets the color(s) of the horizontal line(s)}

\item{legend.show}{Logical. Whether the legend should be displayed. Default = \code{TRUE}.}

\item{legend.title}{String or \code{NULL}, sets the title for the main legend. It is set to \code{NULL} (off) by default.}

\item{data.out}{Logical that sets whether just the plot should be output, or a list containing the plot (\code{p}) and data (\code{data}).  Note: plotly output is turned off in this setting, but hover.data is still calculated.}

\item{...}{arguments passed to dittoPlot by dittoRidgePlot.  Options are all the ones above.}
}
\value{
a ggplot or plotly where continuous data, grouped by sample, age, cluster, etc., shown on either the y-axis by a violin plot, boxplot, and/or jittered points, or on the x-axis by a ridgeplot with or without jittered points.
Alternatively, will return the data that would go into such a plot as well with \code{data.out=TRUE}
}
\description{
Plots continuous data for cutomizable cells'/samples' groupings on a y-axis
}
\details{
If \code{do.hover=TRUE}, cell/sample information, determined by the \code{hover.data} input, is retrieved and displayed
upon hovering the cursor over a jitter point.

If \code{data.out=TRUE}, a list containing the plot (\code{p}), a data.table containing the underlying data for target cells (\code{data})

If \code{add.line}, is provided a value, a vertical (or horizontal, depending on plot type) line will be added at the value provided.
It's type and color are set with \code{line.linetype}, which is "dashed" by default, and \code{line.color}, which is "black" by default.

The \code{plots} argument determines the types of data representation that will be generated, as well as their order from back to front.
Options are \code{"jitter"}, \code{"boxplot"}, \code{"vlnplot"}, and \code{"ridgeplot"}.
Each plot type has specific associated options which are controlled by variables that start with their associated string, ex: \code{jitter.size}.

Inclusion of \code{"ridgeplot"} overrides boxplot and violin plot and changes the plot to be horizontal.

Use of dittoRidgePlot essntially just changes the default for the \code{plots} input to be \code{c("ridgeplot", "jitter")}.

Similarly, use of dittoBoxPlot essntially just changes the default for the \code{plots} input to be \code{c("jitter", "boxplot")}.
}
\section{Functions}{
\itemize{
\item \code{dittoRidgePlot}: Plots continuous data for cutomizable cells'/samples' groupings horizontally in a desnsity representation

\item \code{dittoBoxPlot}: Plots continuous data for cutomizable cells'/samples' groupings in boxplot form
}}

\examples{
library(Seurat)
pbmc <- pbmc_small
dittoPlot("CD14", object = "pbmc", group.by = "RNA_snn_res.1", color.by = "RNA_snn_res.1")
# Note: if DEFAULT <- "pbmc" is run beforehand, the object input can be skipped completely.
DEFAULT <- "pbmc"
dittoPlot("CD14", group.by = "RNA_snn_res.1", color.by = "RNA_snn_res.1")

# We can adjust the types of plots displayed with the plots input:
dittoPlot("CD14", group.by = "RNA_snn_res.1",
  plots = c("vlnplot", "boxplot", "jitter"),
  boxplot.fill = FALSE)

# Quickly make a Ridgeplot
dittoRidgePlot("CD14", group.by = "RNA_snn_res.1")

# Quickly make a Boxplot
dittoBoxPlot("CD14", group.by = "RNA_snn_res.1")
}
